(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{61:function(e,t,a){"use strict";a.r(t);var s=a(2),n=Object(s.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"_3-loops-and-arrays-part-one"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-loops-and-arrays-part-one","aria-hidden":"true"}},[e._v("#")]),e._v(" 3. Loops and arrays: part one")]),e._v(" "),a("h2",{attrs:{id:"_3-1-the-while-loop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-the-while-loop","aria-hidden":"true"}},[e._v("#")]),e._v(" 3.1. The "),a("code",[e._v("while")]),e._v(" loop")]),e._v(" "),a("p",[e._v("Solve the task using "),a("code",[e._v("while")]),e._v(" loop:")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("Variant")]),e._v(" "),a("th",[e._v("Description")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("1")]),e._v(" "),a("td",[e._v("Create two integer-type variables, "),a("code",[e._v("c")]),e._v(" and "),a("code",[e._v("d")]),e._v(". Decrease "),a("code",[e._v("c")]),e._v(" by "),a("code",[e._v("2")]),e._v(" and increase "),a("code",[e._v("d")]),e._v(" by "),a("code",[e._v("10")]),e._v(" every cycle as long as "),a("code",[e._v("c")]),e._v(" is greater than "),a("code",[e._v("-500")]),e._v(" and "),a("code",[e._v("d")]),e._v(" is less than "),a("code",[e._v("10000")]),e._v(".")])]),e._v(" "),a("tr",[a("td",[e._v("2")]),e._v(" "),a("td",[e._v("Create two integer-type variables, "),a("code",[e._v("a")]),e._v(" and "),a("code",[e._v("b")]),e._v(". Increase "),a("code",[e._v("a")]),e._v(" by "),a("code",[e._v("3")]),e._v(" and decrease "),a("code",[e._v("b")]),e._v(" by "),a("code",[e._v("1")]),e._v(" every cycle as long as "),a("code",[e._v("a")]),e._v(" is less than "),a("code",[e._v("300")]),e._v(" and "),a("code",[e._v("b")]),e._v(" is greater than "),a("code",[e._v("5")]),e._v(".")])]),e._v(" "),a("tr",[a("td",[e._v("3")]),e._v(" "),a("td",[e._v("Create two float-point variables "),a("code",[e._v("k")]),e._v(" and "),a("code",[e._v("x")]),e._v(". Increase "),a("code",[e._v("x")]),e._v(" by "),a("code",[e._v("1")]),e._v(" every cycle as long as "),a("code",[e._v("k / x")]),e._v(" is greater than "),a("code",[e._v("0.5")]),e._v(".")])]),e._v(" "),a("tr",[a("td",[e._v("4")]),e._v(" "),a("td",[e._v("Create integer-type variable "),a("code",[e._v("j")]),e._v(". Increase "),a("code",[e._v("j")]),e._v(" by "),a("code",[e._v("1")]),e._v(" every cycle as long as the remainder of the division of "),a("code",[e._v("j")]),e._v(" by "),a("code",[e._v("216")]),e._v(" is less than "),a("code",[e._v("121")]),e._v(".")])]),e._v(" "),a("tr",[a("td",[e._v("5")]),e._v(" "),a("td",[e._v("Create three integer-type variables, "),a("code",[e._v("a")]),e._v(", "),a("code",[e._v("b")]),e._v(" and "),a("code",[e._v("c")]),e._v(". Increase "),a("code",[e._v("a")]),e._v(" by "),a("code",[e._v("1")]),e._v(", "),a("code",[e._v("b")]),e._v(" by "),a("code",[e._v("2")]),e._v(" and decrease "),a("code",[e._v("c")]),e._v(" by "),a("code",[e._v("3")]),e._v(" every cycle as long as "),a("code",[e._v("a + b")]),e._v(" is less than "),a("code",[e._v("c")]),e._v(".")])]),e._v(" "),a("tr",[a("td",[e._v("6")]),e._v(" "),a("td",[e._v("Create integer-type variable "),a("code",[e._v("i")]),e._v(". Increase "),a("code",[e._v("i")]),e._v(" by "),a("code",[e._v("1")]),e._v(" every cycle as long as the remainder of the division of "),a("code",[e._v("i")]),e._v(" by "),a("code",[e._v("30")]),e._v(" is not zero.")])]),e._v(" "),a("tr",[a("td",[e._v("7")]),e._v(" "),a("td",[e._v("Create two float-point variables "),a("code",[e._v("t")]),e._v(" and "),a("code",[e._v("e")]),e._v(". Increase "),a("code",[e._v("e")]),e._v(" by "),a("code",[e._v("3")]),e._v(" every cycle as long as "),a("code",[e._v("1 / e")]),e._v(" is greater than "),a("code",[e._v("t")]),e._v(".")])]),e._v(" "),a("tr",[a("td",[e._v("8")]),e._v(" "),a("td",[e._v("Create two integer-type variables, "),a("code",[e._v("g")]),e._v(" and "),a("code",[e._v("h")]),e._v(". Decrease "),a("code",[e._v("g")]),e._v(" by "),a("code",[e._v("4")]),e._v(" times and increase "),a("code",[e._v("h")]),e._v(" by "),a("code",[e._v("2")]),e._v(" times every cycle as long as "),a("code",[e._v("g")]),e._v(" is greater than "),a("code",[e._v("-2")]),e._v(" and "),a("code",[e._v("h")]),e._v(" is less than "),a("code",[e._v("2560")]),e._v(".")])]),e._v(" "),a("tr",[a("td",[e._v("9")]),e._v(" "),a("td",[e._v("Create two integer-type variables, "),a("code",[e._v("e")]),e._v(" and "),a("code",[e._v("f")]),e._v(". Increase "),a("code",[e._v("e")]),e._v(" by "),a("code",[e._v("2")]),e._v(" times and decrease "),a("code",[e._v("f")]),e._v(" by "),a("code",[e._v("3")]),e._v(" times every cycle as long as "),a("code",[e._v("e")]),e._v(" is less than "),a("code",[e._v("670")]),e._v(" and "),a("code",[e._v("f")]),e._v(" is greater than "),a("code",[e._v("-30")]),e._v(".")])])])]),e._v(" "),a("p",[e._v("You can initialize variables either by integer constant in code or by reading data from a standard input.")]),e._v(" "),a("h3",{attrs:{id:"reference-3-1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reference-3-1","aria-hidden":"true"}},[e._v("#")]),e._v(" Reference (3.1)")]),e._v(" "),a("p",[e._v("Syntax of the "),a("code",[e._v("while")]),e._v(" loop:")]),e._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("while")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("expression"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  statement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),a("p",[e._v("Firstly, the "),a("code",[e._v("expression")]),e._v(" is evaluated. If it is "),a("code",[e._v("true")]),e._v(" (non-zero), "),a("code",[e._v("statement")]),e._v(" is executed and "),a("code",[e._v("expression")]),e._v(" is re-evaluated. This cycle contiinues until "),a("code",[e._v("expression")]),e._v(" becomes "),a("code",[e._v("false")]),e._v(" (zero), at which point execution resumes after "),a("code",[e._v("statement")]),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"_3-2-the-for-loop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-the-for-loop","aria-hidden":"true"}},[e._v("#")]),e._v(" 3.2. The "),a("code",[e._v("for")]),e._v(" loop")]),e._v(" "),a("p",[e._v("Solve the task using "),a("code",[e._v("for")]),e._v(" loop:")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("Variant")]),e._v(" "),a("th",[e._v("Description")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("1")]),e._v(" "),a("td",[e._v("Print all integer numbers from "),a("code",[e._v("100")]),e._v(" to "),a("code",[e._v("300")]),e._v(", for which the remainder of the division by "),a("code",[e._v("5")]),e._v(" equals to "),a("code",[e._v("3")]),e._v(" or "),a("code",[e._v("4")]),e._v(".")])]),e._v(" "),a("tr",[a("td",[e._v("2")]),e._v(" "),a("td",[e._v("Print all odd integer numbers from "),a("code",[e._v("300")]),e._v(" to "),a("code",[e._v("500")]),e._v(".")])]),e._v(" "),a("tr",[a("td",[e._v("3")]),e._v(" "),a("td",[e._v("Print all integer numbers from "),a("code",[e._v("50")]),e._v(" to "),a("code",[e._v("100")]),e._v(", for which the remainder of the division by "),a("code",[e._v("9")]),e._v(" is greater than "),a("code",[e._v("2")]),e._v(" and less than "),a("code",[e._v("7")]),e._v(".")])]),e._v(" "),a("tr",[a("td",[e._v("4")]),e._v(" "),a("td",[e._v("Print all integer numbers from "),a("code",[e._v("-500")]),e._v(" to "),a("code",[e._v("-200")]),e._v(", for which the remainder of the division by "),a("code",[e._v("8")]),e._v(" equals to "),a("code",[e._v("-5")]),e._v(".")])]),e._v(" "),a("tr",[a("td",[e._v("5")]),e._v(" "),a("td",[e._v("Print all integer numbers from "),a("code",[e._v("10")]),e._v(" to "),a("code",[e._v("90")]),e._v(", which are divisible of "),a("code",[e._v("3")])])]),e._v(" "),a("tr",[a("td",[e._v("6")]),e._v(" "),a("td",[e._v("Print all integer numbers from "),a("code",[e._v("-100")]),e._v(" to "),a("code",[e._v("100")]),e._v(", for which the remainder of the division by "),a("code",[e._v("5")]),e._v(" equals to "),a("code",[e._v("3")]),e._v(" or "),a("code",[e._v("-3")]),e._v(".")])]),e._v(" "),a("tr",[a("td",[e._v("7")]),e._v(" "),a("td",[e._v("Print all integer numbers from "),a("code",[e._v("100")]),e._v(" to "),a("code",[e._v("300")]),e._v(", for which the remainder of the division by "),a("code",[e._v("13")]),e._v(" is greater than "),a("code",[e._v("3")]),e._v(" and less than "),a("code",[e._v("8")]),e._v(".")])]),e._v(" "),a("tr",[a("td",[e._v("8")]),e._v(" "),a("td",[e._v("Print all even integer numbers from "),a("code",[e._v("1")]),e._v(" to "),a("code",[e._v("1000")]),e._v(".")])]),e._v(" "),a("tr",[a("td",[e._v("9")]),e._v(" "),a("td",[e._v("Print all integer numbers from "),a("code",[e._v("0")]),e._v(" to "),a("code",[e._v("100")]),e._v(", which ends with digits "),a("code",[e._v("1")]),e._v(" and "),a("code",[e._v("3")])])])])]),e._v(" "),a("h3",{attrs:{id:"reference-3-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reference-3-2","aria-hidden":"true"}},[e._v("#")]),e._v(" Reference (3.2)")]),e._v(" "),a("p",[e._v("Syntax of the "),a("code",[e._v("for")]),e._v(" loop:")]),e._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("expression1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" expression2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" expression3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  statement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),a("p",[e._v("This "),a("code",[e._v("for")]),e._v(" loop is equivalent to "),a("code",[e._v("while")]),e._v(" loop shown below:")]),e._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[e._v("expression1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("while")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("expression2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  statement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n  expression3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),a("p",[e._v("So, the "),a("code",[e._v("for")]),e._v(" loop is a generalization of the "),a("code",[e._v("while")]),e._v(" loop.")]),e._v(" "),a("p",[e._v("The first part of the loop, "),a("code",[e._v("expression1")]),e._v(", is the initialization. The second part, "),a("code",[e._v("expression2")]),e._v(", is the test or condition tha controls the loop (the same as for "),a("code",[e._v("while")]),e._v(" loop). This condition is evaluated. If it is "),a("code",[e._v("true")]),e._v(" (non-zero), the body  of the loop is executed. Then the increment step, "),a("code",[e._v("expression3")]),e._v(", is executed, and the condition re-evaluated. The loop terminates id the condition has become "),a("code",[e._v("false")]),e._v(" (zero).")]),e._v(" "),a("h2",{attrs:{id:"_3-3-the-do-while-loop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-the-do-while-loop","aria-hidden":"true"}},[e._v("#")]),e._v(" 3.3. The "),a("code",[e._v("do-while")]),e._v(" loop")]),e._v(" "),a("p",[e._v("Solve the task using "),a("code",[e._v("do-while")]),e._v(" loop. Ask user to repeatedly input integer numbers. Terminate the loop ...")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("Variant")]),e._v(" "),a("th",[e._v("Description")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("1")]),e._v(" "),a("td",[e._v("... if the current entered number is negative")])]),e._v(" "),a("tr",[a("td",[e._v("2")]),e._v(" "),a("td",[e._v("... if the current entered number is even.")])]),e._v(" "),a("tr",[a("td",[e._v("3")]),e._v(" "),a("td",[e._v("... when the multiplication of all entered numbers becomes greater than "),a("code",[e._v("4000")]),e._v(".")])]),e._v(" "),a("tr",[a("td",[e._v("4")]),e._v(" "),a("td",[e._v("... if the current entered number is greater than "),a("code",[e._v("100")]),e._v(".")])]),e._v(" "),a("tr",[a("td",[e._v("5")]),e._v(" "),a("td",[e._v("... when the count of all entered numbers becomes greater than "),a("code",[e._v("5")]),e._v(".")])]),e._v(" "),a("tr",[a("td",[e._v("6")]),e._v(" "),a("td",[e._v("... if the current entered number is odd.")])]),e._v(" "),a("tr",[a("td",[e._v("7")]),e._v(" "),a("td",[e._v("... when the sum of all entered numbers becomes greater than "),a("code",[e._v("100")]),e._v(".")])]),e._v(" "),a("tr",[a("td",[e._v("8")]),e._v(" "),a("td",[e._v("... if the current entered number is less than previous one.")])]),e._v(" "),a("tr",[a("td",[e._v("9")]),e._v(" "),a("td",[e._v("... if the current entered number is divisible of "),a("code",[e._v("5")])])])])]),e._v(" "),a("h3",{attrs:{id:"reference-3-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reference-3-3","aria-hidden":"true"}},[e._v("#")]),e._v(" Reference (3.3)")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("while")]),e._v(" and "),a("code",[e._v("for")]),e._v(" loops test the termination condition at the top. By contrast, "),a("code",[e._v("do-while")]),e._v(" loop, tests at the bottom after making each pass through the loop body. "),a("strong",[e._v("The body is executed at least once.")])]),e._v(" "),a("p",[e._v("Syntax of the "),a("code",[e._v("do-while")]),e._v(" loop:")]),e._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("do")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  statement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("while")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("expression"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),a("p",[e._v("The "),a("code",[e._v("statement")]),e._v(" is executed, then "),a("code",[e._v("expression")]),e._v(" is evaluated. If it's "),a("code",[e._v("true")]),e._v(" (non-zero), "),a("code",[e._v("statement")]),e._v(" is evaluated again, and so on. When the expression becomes false, the loop terminates.")]),e._v(" "),a("h2",{attrs:{id:"_3-4-arrays"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-arrays","aria-hidden":"true"}},[e._v("#")]),e._v(" 3.4. Arrays")]),e._v(" "),a("p",[e._v("Declare an array of "),a("code",[e._v("10")]),e._v(" integer-typed values. Initialize it using the "),a("code",[e._v("while")]),e._v(" loop. The array must contain ...")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("Variant")]),e._v(" "),a("th",[e._v("Description")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("1")]),e._v(" "),a("td",[e._v("... numbers which are divisible of 7, starting from 7 ("),a("code",[e._v("7")]),e._v(", "),a("code",[e._v("14")]),e._v(", "),a("code",[e._v("21")]),e._v(", ...)")])]),e._v(" "),a("tr",[a("td",[e._v("2")]),e._v(" "),a("td",[e._v("... numbers for which the remainder of the division by "),a("code",[e._v("7")]),e._v(" equals "),a("code",[e._v("4")]),e._v(", starting from "),a("code",[e._v("4")]),e._v(" onwards ("),a("code",[e._v("4")]),e._v(", "),a("code",[e._v("11")]),e._v(", "),a("code",[e._v("18")]),e._v(", ...).")])]),e._v(" "),a("tr",[a("td",[e._v("3")]),e._v(" "),a("td",[e._v("... numbers for which the remainder of the division by "),a("code",[e._v("26")]),e._v(" is greater than "),a("code",[e._v("14")]),e._v(" and less than "),a("code",[e._v("18")]),e._v(", starting from "),a("code",[e._v("41")]),e._v(" onwards ("),a("code",[e._v("41")]),e._v(", "),a("code",[e._v("42")]),e._v(", "),a("code",[e._v("43")]),e._v(", ...).")])]),e._v(" "),a("tr",[a("td",[e._v("4")]),e._v(" "),a("td",[e._v("... numbers which are end with digits "),a("code",[e._v("2")]),e._v(" and "),a("code",[e._v("7")]),e._v(", starting from "),a("code",[e._v("12")]),e._v(" ("),a("code",[e._v("12")]),e._v(", "),a("code",[e._v("17")]),e._v(", "),a("code",[e._v("22")]),e._v(", ...)")])]),e._v(" "),a("tr",[a("td",[e._v("5")]),e._v(" "),a("td",[e._v("... numbers for which the remainder of the division by "),a("code",[e._v("13")]),e._v(" equals "),a("code",[e._v("7")]),e._v(", starting from "),a("code",[e._v("7")]),e._v(" onwards ("),a("code",[e._v("7")]),e._v(", "),a("code",[e._v("20")]),e._v(", "),a("code",[e._v("33")]),e._v(", ...).")])]),e._v(" "),a("tr",[a("td",[e._v("6")]),e._v(" "),a("td",[e._v("... numbers which are divisible of 4, starting from 4 ("),a("code",[e._v("4")]),e._v(", "),a("code",[e._v("8")]),e._v(", "),a("code",[e._v("12")]),e._v(" ...)")])]),e._v(" "),a("tr",[a("td",[e._v("7")]),e._v(" "),a("td",[e._v("... odd numbers starting from "),a("code",[e._v("1")]),e._v(" onwards ("),a("code",[e._v("1")]),e._v(", "),a("code",[e._v("3")]),e._v(", "),a("code",[e._v("5")]),e._v(", ...).")])]),e._v(" "),a("tr",[a("td",[e._v("8")]),e._v(" "),a("td",[e._v("... numbers for which the remainder of the division by "),a("code",[e._v("15")]),e._v(" is greater than "),a("code",[e._v("2")]),e._v(" and less than "),a("code",[e._v("6")]),e._v(", starting from "),a("code",[e._v("48")]),e._v(" onwards ("),a("code",[e._v("48")]),e._v(", "),a("code",[e._v("49")]),e._v(", "),a("code",[e._v("50")]),e._v(", ...).")])]),e._v(" "),a("tr",[a("td",[e._v("9")]),e._v(" "),a("td",[e._v("... even numbers starting from "),a("code",[e._v("2")]),e._v(" onwards ("),a("code",[e._v("2")]),e._v(", "),a("code",[e._v("4")]),e._v(", "),a("code",[e._v("6")]),e._v(", ...).")])])])]),e._v(" "),a("p",[e._v("Print the array to the standard output using the "),a("code",[e._v("for")]),e._v(" loop.")]),e._v(" "),a("h3",{attrs:{id:"reference-3-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reference-3-4","aria-hidden":"true"}},[e._v("#")]),e._v(" Reference (3.4)")]),e._v(" "),a("p",[e._v("To declare an array one should use a square brackets. Number in the square brackets means the size of the array:")]),e._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("int")]),e._v(" numbers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Non-initialized array of 10 integer-typed values.")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("char")]),e._v(" symbols"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Non-initialized array of 3 char-typed values.")]),e._v("\n")])])]),a("p",[e._v("Arrays can be created and initialized in one line using a braces:")]),e._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("double")]),e._v(" values"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1.21")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1.44")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1.69")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Initialized array of 3 double-typed values.")]),e._v("\n")])])]),a("p",[e._v("This statement can be rewritten without mentioning the size of the array. In this case, the size is adjusted according to the number of elements initialized within the array:")]),e._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("double")]),e._v(" values"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1.21")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1.44")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1.69")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Initialized array of 3 double-typed values.")]),e._v("\n")])])]),a("p",[e._v("Note that the number in square brackets must be no less than the number of initial values. If it is larger, then uninitialized elements remain in the array.")]),e._v(" "),a("p",[e._v("To access array's element use "),a("code",[e._v("array[index]")]),e._v(":")]),e._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Reading the third element of array _arr_ (because indexes are starting with 0)")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("int")]),e._v(" k "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Changing the first element of array _arr_:")]),e._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("23")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),a("p",[e._v("Example, how to initialize an array:")]),e._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("int")]),e._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("int")]),e._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("  \n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n   arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Array now contains:")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// { 5, 5, 5, 5, 5 }")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n   arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Array now contains:")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// { 0, 1, 2, 3, 4 }")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n   arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("*")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Array now contains:")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// { 2, 4, 6, 8, 10 }")]),e._v("\n\n")])])]),a("p",[e._v("How to check your array:")]),e._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n   "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"%d "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),a("h2",{attrs:{id:"_3-5-the-break-statement"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-the-break-statement","aria-hidden":"true"}},[e._v("#")]),e._v(" 3.5. The "),a("code",[e._v("break")]),e._v(" statement")]),e._v(" "),a("p",[e._v("Declare an array of "),a("code",[e._v("10")]),e._v(" integer-typed values. Initialize it either by integer constants in code or by reading data from a standard input. Using the "),a("code",[e._v("for")]),e._v(" loop, try to find in the array a number ...")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("Variant")]),e._v(" "),a("th",[e._v("Description")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("1")]),e._v(" "),a("td",[e._v("... is divisible of "),a("code",[e._v("5")])])]),e._v(" "),a("tr",[a("td",[e._v("2")]),e._v(" "),a("td",[e._v("... for which the remainder of the division by "),a("code",[e._v("18")]),e._v(" is greater than "),a("code",[e._v("4")]),e._v(" and less than "),a("code",[e._v("7")]),e._v(".")])]),e._v(" "),a("tr",[a("td",[e._v("3")]),e._v(" "),a("td",[e._v("... ends with digit "),a("code",[e._v("3")])])]),e._v(" "),a("tr",[a("td",[e._v("4")]),e._v(" "),a("td",[e._v("... is greater than "),a("code",[e._v("13")]),e._v(" and less than "),a("code",[e._v("17")]),e._v(".")])]),e._v(" "),a("tr",[a("td",[e._v("5")]),e._v(" "),a("td",[e._v("... for which the remainder of the division by "),a("code",[e._v("9")]),e._v(" equals "),a("code",[e._v("4")]),e._v(".")])]),e._v(" "),a("tr",[a("td",[e._v("6")]),e._v(" "),a("td",[e._v("... has at least "),a("code",[e._v("2")]),e._v(" digits")])]),e._v(" "),a("tr",[a("td",[e._v("7")]),e._v(" "),a("td",[e._v("... for which the remainder of the division by "),a("code",[e._v("6")]),e._v(" equals "),a("code",[e._v("5")]),e._v(".")])]),e._v(" "),a("tr",[a("td",[e._v("8")]),e._v(" "),a("td",[e._v("... is greater than "),a("code",[e._v("40")]),e._v(" and less than "),a("code",[e._v("46")]),e._v(".")])]),e._v(" "),a("tr",[a("td",[e._v("9")]),e._v(" "),a("td",[e._v("... for which the remainder of the division by "),a("code",[e._v("31")]),e._v(" is greater than "),a("code",[e._v("16")]),e._v(" and less than "),a("code",[e._v("21")]),e._v(".")])])])]),e._v(" "),a("p",[e._v("If the required number was found, display it. Otherwise, display a message saying that the number was not found.")]),e._v(" "),a("p",[e._v("Use the "),a("code",[e._v("break")]),e._v(" statement to terminate "),a("code",[e._v("for")]),e._v(" loop once the required number was found.")]),e._v(" "),a("p",[e._v("Sample output:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Please, input the array: 4 -3 5 8 -1 4 2 0 5 6\nRequired number: 8\n")])])]),a("h3",{attrs:{id:"reference-3-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reference-3-5","aria-hidden":"true"}},[e._v("#")]),e._v(" Reference (3.5)")]),e._v(" "),a("p",[e._v("It is sometimes convenient to be able to exit from a loop other than by testing at the top or bottom. The break statement provides an early exit from "),a("code",[e._v("for")]),e._v(", "),a("code",[e._v("while")]),e._v(", and "),a("code",[e._v("do-while")]),e._v(" loops, just as from "),a("code",[e._v("switch")]),e._v(". A break causes the innermost enclosing loop or "),a("code",[e._v("switch")]),e._v(" to be exited immediately.")])])},[],!1,null,null,null);t.default=n.exports}}]);